#!/bin/bash
# Pre-push validation script
# Run this before pushing to ensure CI will pass

set -e  # Exit on first error

echo "üöÄ Pre-Push Validation Script"
echo "=============================="
echo ""

# Check if we're in the right directory
if [ ! -f "candidate_reviewer.py" ]; then
    echo "‚ùå Error: Run this script from the project root directory"
    exit 1
fi

# 1. Format code with black
echo "1Ô∏è‚É£  Formatting code with black..."
python3 -m black . || { echo "‚ùå Black formatting failed"; exit 1; }
echo "‚úÖ Black formatting complete"
echo ""

# 2. Sort imports with isort
echo "2Ô∏è‚É£  Sorting imports with isort..."
python3 -m isort . || { echo "‚ùå isort failed"; exit 1; }
echo "‚úÖ Import sorting complete"
echo ""

# 3. Check linting with flake8
echo "3Ô∏è‚É£  Checking code quality with flake8..."
python3 -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics || { echo "‚ùå Flake8 found critical errors"; exit 1; }
echo "‚úÖ Flake8 check passed"
echo ""

# 4. Run all tests
echo "4Ô∏è‚É£  Running test suite..."
# Create test data directory if it doesn't exist (for local testing)
mkdir -p test_data/{intake,jobs,candidates,output}
export BASE_DATA_PATH=./test_data
python3 -m pytest tests/ -v --tb=short || { echo "‚ùå Tests failed"; exit 1; }
echo "‚úÖ All tests passed"
echo ""

# 5. Verify installation
echo "5Ô∏è‚É£  Verifying installation..."
python3 verify_installation.py || { echo "‚ùå Installation verification failed"; exit 1; }
echo "‚úÖ Installation verified"
echo ""

# Summary
echo "=============================="
echo "üéâ All checks passed!"
echo "‚úÖ Code formatted (black)"
echo "‚úÖ Imports sorted (isort)"
echo "‚úÖ Linting passed (flake8)"
echo "‚úÖ Tests passed (pytest)"
echo "‚úÖ Installation verified"
echo ""
echo "üëç Ready to push to GitHub!"
echo "=============================="

